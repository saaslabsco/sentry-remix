{"version":3,"file":"index.server.js","sources":["../../src/index.server.ts"],"sourcesContent":["import { applySdkMetadata } from '@sentry/core';\nimport type { NodeClient, NodeOptions } from '@sentry/node';\nimport { getDefaultIntegrations as getDefaultNodeIntegrations, init as nodeInit, isInitialized } from '@sentry/node';\nimport type { Integration } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './utils/debug-build';\nimport { instrumentServer } from './utils/instrumentServer';\nimport { httpIntegration } from './utils/integrations/http';\nimport { remixIntegration } from './utils/integrations/opentelemetry';\nimport type { RemixOptions } from './utils/remixOptions';\n\n// We need to explicitly export @sentry/node as they end up under `default` in ESM builds\n// See: https://github.com/getsentry/sentry-javascript/issues/8474\nexport {\n  addBreadcrumb,\n  addEventProcessor,\n  addIntegration,\n  addOpenTelemetryInstrumentation,\n  addRequestDataToEvent,\n  anrIntegration,\n  captureCheckIn,\n  captureConsoleIntegration,\n  captureEvent,\n  captureException,\n  captureFeedback,\n  captureMessage,\n  captureSession,\n  close,\n  connectIntegration,\n  consoleIntegration,\n  contextLinesIntegration,\n  continueTrace,\n  createGetModuleFromFilename,\n  createTransport,\n  cron,\n  debugIntegration,\n  dedupeIntegration,\n  DEFAULT_USER_INCLUDES,\n  defaultStackParser,\n  endSession,\n  expressErrorHandler,\n  expressIntegration,\n  extractRequestData,\n  extraErrorDataIntegration,\n  fastifyIntegration,\n  flush,\n  functionToStringIntegration,\n  generateInstrumentOnce,\n  genericPoolIntegration,\n  getActiveSpan,\n  getAutoPerformanceIntegrations,\n  getClient,\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub,\n  getCurrentScope,\n  getDefaultIntegrations,\n  getGlobalScope,\n  getIsolationScope,\n  getRootSpan,\n  getSentryRelease,\n  getSpanDescendants,\n  getSpanStatusFromHttpCode,\n  graphqlIntegration,\n  hapiIntegration,\n  httpIntegration,\n  inboundFiltersIntegration,\n  initOpenTelemetry,\n  isInitialized,\n  kafkaIntegration,\n  koaIntegration,\n  lastEventId,\n  linkedErrorsIntegration,\n  localVariablesIntegration,\n  makeNodeTransport,\n  metrics,\n  modulesIntegration,\n  mongoIntegration,\n  mongooseIntegration,\n  mysql2Integration,\n  mysqlIntegration,\n  nativeNodeFetchIntegration,\n  nestIntegration,\n  NodeClient,\n  nodeContextIntegration,\n  onUncaughtExceptionIntegration,\n  onUnhandledRejectionIntegration,\n  parameterize,\n  postgresIntegration,\n  prismaIntegration,\n  redisIntegration,\n  requestDataIntegration,\n  rewriteFramesIntegration,\n  Scope,\n  SDK_VERSION,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  sessionTimingIntegration,\n  setContext,\n  setCurrentClient,\n  setExtra,\n  setExtras,\n  setHttpStatus,\n  setMeasurement,\n  setTag,\n  setTags,\n  setupConnectErrorHandler,\n  setupExpressErrorHandler,\n  setupHapiErrorHandler,\n  setupKoaErrorHandler,\n  setupNestErrorHandler,\n  setUser,\n  spanToBaggageHeader,\n  spanToJSON,\n  spanToTraceHeader,\n  spotlightIntegration,\n  startInactiveSpan,\n  startNewTrace,\n  startSession,\n  startSpan,\n  startSpanManual,\n  trpcMiddleware,\n  withActiveSpan,\n  withIsolationScope,\n  withMonitor,\n  withScope,\n  zodErrorsIntegration,\n} from '@sentry/node';\n\n// Keeping the `*` exports for backwards compatibility and types\nexport * from '@sentry/node';\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  wrapRemixHandleError,\n  sentryHandleError,\n  wrapHandleErrorWithSentry,\n} from './utils/instrumentServer';\n\nexport { captureRemixServerException } from './utils/errors';\n\nexport { ErrorBoundary, withErrorBoundary } from '@sentry/react';\nexport { withSentry } from './client/performance';\nexport { captureRemixErrorBoundaryError } from './client/errors';\nexport { browserTracingIntegration } from './client/browserTracingIntegration';\n\nexport type { SentryMetaArgs } from './utils/types';\n\n/**\n * Returns the default Remix integrations.\n *\n * @param options The options for the SDK.\n */\nexport function getRemixDefaultIntegrations(options: RemixOptions): Integration[] {\n  return [\n    ...getDefaultNodeIntegrations(options as NodeOptions).filter(integration => integration.name !== 'Http'),\n    httpIntegration(),\n    options.autoInstrumentRemix ? remixIntegration() : undefined,\n  ].filter(int => int) as Integration[];\n}\n\n/**\n * Returns the given Express createRequestHandler function.\n * This function is no-op and only returns the given function.\n *\n * @deprecated No need to wrap the Express request handler.\n * @param createRequestHandlerFn The Remix Express `createRequestHandler`.\n * @returns `createRequestHandler` function.\n */\nexport function wrapExpressCreateRequestHandler(createRequestHandlerFn: unknown): unknown {\n  DEBUG_BUILD && logger.warn('wrapExpressCreateRequestHandler is deprecated and no longer needed.');\n\n  return createRequestHandlerFn;\n}\n\n/** Initializes Sentry Remix SDK on Node. */\nexport function init(options: RemixOptions): NodeClient | undefined {\n  applySdkMetadata(options, 'remix', ['remix', 'node']);\n\n  if (isInitialized()) {\n    DEBUG_BUILD && logger.log('SDK already initialized');\n\n    return;\n  }\n\n  options.defaultIntegrations = getRemixDefaultIntegrations(options as NodeOptions);\n\n  const client = nodeInit(options as NodeOptions);\n\n  instrumentServer(options);\n\n  return client;\n}\n"],"names":["getDefaultNodeIntegrations","httpIntegration","remixIntegration","DEBUG_BUILD","logger","applySdkMetadata","isInitialized","nodeInit","instrumentServer"],"mappings":";;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACO,SAAS,2BAA2B,CAAC,OAAO,EAA+B;AAClF,EAAE,OAAO;AACT,IAAI,GAAGA,2BAA0B,CAAC,OAAA,EAAuB,CAAC,MAAM,CAAC,WAAA,IAAe,WAAW,CAAC,IAAK,KAAI,MAAM,CAAC;AAC5G,IAAIC,oBAAe,EAAE;AACrB,IAAI,OAAO,CAAC,mBAAoB,GAAEC,8BAAgB,EAAC,GAAI,SAAS;AAChE,GAAG,CAAC,MAAM,CAAC,GAAI,IAAG,GAAG,CAAE,EAAA;AACvB,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,+BAA+B,CAAC,sBAAsB,EAAoB;AAC1F,EAAEC,0BAAeC,YAAM,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAA;AACnG;AACA,EAAE,OAAO,sBAAsB,CAAA;AAC/B,CAAA;AACA;AACA;AACO,SAAS,IAAI,CAAC,OAAO,EAAwC;AACpE,EAAEC,qBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAA;AACvD;AACA,EAAE,IAAIC,kBAAa,EAAE,EAAE;AACvB,IAAIH,0BAAeC,YAAM,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAA;AACxD;AACA,IAAI,OAAM;AACV,GAAE;AACF;AACA,EAAE,OAAO,CAAC,mBAAA,GAAsB,2BAA2B,CAAC,SAAuB,CAAA;AACnF;AACA,EAAE,MAAM,MAAO,GAAEG,SAAQ,CAAC,SAAuB,CAAA;AACjD;AACA,EAAEC,iCAAgB,CAAC,OAAO,CAAC,CAAA;AAC3B;AACA,EAAE,OAAO,MAAM,CAAA;AACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}